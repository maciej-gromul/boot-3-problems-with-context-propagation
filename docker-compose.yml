version: '2.4'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:6.2.0
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  broker:
    image: confluentinc/cp-server:6.2.0
    hostname: broker
    container_name: broker
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "9101:9101"
      - "29092:29092"
    healthcheck:
      test: [ "CMD", "kafka-topics", "--bootstrap-server=localhost:9092", "--topic=_schemas" ,"--describe" ]
      interval: 15s
      timeout: 10s
      retries: 10
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_METRIC_REPORTERS: io.confluent.metrics.reporter.ConfluentMetricsReporter
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CONFLUENT_BALANCER_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_JMX_PORT: 9101
      KAFKA_JMX_HOSTNAME: localhost
      KAFKA_CONFLUENT_SCHEMA_REGISTRY_URL: http://schema-registry:8081
      CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: broker:29092
      CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 1
      CONFLUENT_METRICS_ENABLE: 'true'
      CONFLUENT_SUPPORT_CUSTOMER_ID: 'anonymous'

  schema-registry:
    image: confluentinc/cp-schema-registry:6.2.0
    hostname: schema-registry
    container_name: schema-registry
    depends_on:
      - broker
    ports:
      - "8081:8081"
    healthcheck:
      test: [ "CMD", "curl", "--fail", "http://localhost:8081" ]
      interval: 15s
      timeout: 10s
      retries: 10
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: 'broker:29092'
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081

  tempo:
    image: grafana/tempo:latest
    command: [ "-config.file=/etc/tempo.yaml" ]
    volumes:
      - ./deployments/tempo-local.yaml:/etc/tempo.yaml
      - tempo-data:/tmp/tempo
    ports:
      - "14268"  # jaeger ingest
      - "3200"   # tempo
      - "4317"  # otlp grpc
      - "4318"  # otlp http
      - "9411"   # zipkin

  loki:
    image: grafana/loki:latest
    volumes:
      - ./deployments/loki.yaml:/etc/loki/local-config.yaml
    ports:
      - "3100:3100"
      - "7946"
      - "9095"
    depends_on:
      - minio
    command: -config.file=/etc/loki/local-config.yaml

  promtail:
    image: grafana/promtail:2.6.0
    volumes:
      - ./logs:/var/log/hermod-channel-router/
      - ./deployments/promtail.yaml:/etc/promtail/config.yml
    command: -config.file=/etc/promtail/config.yml

  grafana:
    image: grafana/grafana:9.1.6
    volumes:
      - ./deployments/grafana-datasources.yaml:/etc/grafana/provisioning/datasources/datasources.yaml
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_DISABLE_LOGIN_FORM=true
    ports:
      - "3000:3000"

  minio:
    image: minio/minio
    entrypoint: [ "" ]
    command: [ "sh", "-c", "mkdir -p /data/mimir && mkdir -p /data/loki-data && mkdir -p /data/loki-ruler && minio server --quiet /data" ]
    environment:
      - MINIO_ROOT_USER=mimir
      - MINIO_ROOT_PASSWORD=supersecret
    volumes:
      - minio-data:/data

  load-balancer:
    image: nginx:latest
    volumes:
      - ./deployments/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - "mimir-1"
      - "mimir-2"
    ports:
      - 9009:9009

  mimir-1:
    image: grafana/mimir:latest
    command: [ "-config.file=/etc/mimir.yaml" ]
    hostname: mimir-1
    depends_on:
      - minio
    volumes:
      - ./deployments/mimir.yaml:/etc/mimir.yaml
      - mimir-1-data:/data

  mimir-2:
    image: grafana/mimir:latest
    command: [ "-config.file=/etc/mimir.yaml" ]
    hostname: mimir-2
    depends_on:
      - minio
    volumes:
      - ./deployments/mimir.yaml:/etc/mimir.yaml
      - mimir-2-data:/data

  otel-collector:
    image: otel/opentelemetry-collector-contrib:latest
    depends_on:
      - tempo
      - mimir-1
      - mimir-2
      - loki
    container_name: otel-collector
    command: [ "--config=/etc/otel-collector-config.yaml" ]
    volumes:
      - ./deployments/otel-collector-config.yaml:/etc/otel-collector-config.yaml
    ports:
      - "1888:1888"
      - "8888:8888"
      - "8889:8889"
      - "13133:13133"
      - "4317:4317"
      - "4318:4318"
      - "55679:55679"

volumes:
  mimir-1-data:
  mimir-2-data:
  minio-data:
  tempo-data: